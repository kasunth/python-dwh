AWSTemplateFormatVersion: 2010-09-09
Description: Redshift provision cluster Data Warehouse template for 4Chealth

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VPCID
      - VPCSubnetID1
      - VPCSubnetID2
      - VPCSubnetID3
      - PubliclyAccessible
      - EnvironmentType
    ParameterLabels:
      VPCID:
        default: VPCID
      VPCSubnetID1:
        default: VPCSubnetID1
      VPCSubnetID2:
        default: VPCSubnetID2
      VPCSubnetID3:
        default: VPCSubnetID3
      PubliclyAccessible:
        default: true

Parameters:
  VPCID:
    Description: A VPC ID
    Type: String
  VPCSubnetID1:
    Description: A VPC subnet ID
    Type: String
  VPCSubnetID2:
    Description: A VPC subnet ID
    Type: String
  VPCSubnetID3:
    Description: A VPC subnet ID
    Type: String
  EnvironmentType:
        Default: dev
        Description: Deployment environment 
        Type: String
  RedshiftUsername:
    Type: String
    Description: The username of the  Redshift cluster
  RedshiftPassword:
    Type: String
    Description: The password of the  Redshift cluster
    NoEcho: true
  # PubliclyAccessible: 
  #   Description: Redshift DWH can access publicaly
  #   Type: String
  #   ConstraintDescription: must be a true or false

Resources:
  RedShiftSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Redshift VPC security group'
      GroupName: !Sub ${EnvironmentType}-4ChealthDWHSG
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0' #'10.0.0.0/16'
          IpProtocol: '-1'
        # - CidrIp: '52.23.63.224/27'
        #   Description : CIDR Block for Quicksight in us-east-1
        #   IpProtocol: tcp
        #   FromPort: 5439
        #   ToPort: 5439
        # - CidrIp: '52.70.63.192/27'
        #   Description : CIDR Block for Firehose in us-east-1
        #   IpProtocol: tcp
        #   FromPort: 5439
        #   ToPort: 5439
        - CidrIp: '0.0.0.0/0'
          Description : CIDR Block for JDBC/ODBC client connection
          IpProtocol: tcp
          FromPort: 5439
          ToPort: 5439
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: "0.0.0.0/0"
          Description: "Outbound access to write logs to S3"
      VpcId:
        Ref: VPCID
  
  RedshiftRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${EnvironmentType}-4ChealthDWHRole
        AssumeRolePolicyDocument:
          Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: redshift.amazonaws.com
            Sid: ''
          Version: 2012-10-17
      

  

  
  RedshiftClusterSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: !Sub
        - '{"username": "${username}", "password": "${password}", "host": "${host}", "port": ${port}, "dbName": "${dbName}"}'
        - {username: !Ref RedshiftUsername, password: !Ref RedshiftPassword, host: !GetAtt ProdRedshiftCluster.Endpoint.Address, port: !GetAtt RedshiftCluster.Endpoint.Port, dbName: "dev"}

  RedshiftPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListBucket
          Effect: Allow
          Resource:
          - arn:aws:s3:::eu-north-1.serverless-analytics
          - arn:aws:s3:::eu-north-1.serverless-analytics/*
          - !Sub "${SampleDataBucket.Arn}"
          - !Sub "${SampleDataBucket.Arn}/*"

        - Action:
          - glue:CreateDatabase
          - glue:DeleteDatabase
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:UpdateDatabase
          - glue:CreateTable
          - glue:DeleteTable
          - glue:BatchDeleteTable
          - glue:UpdateTable
          - glue:GetTable
          - glue:GetTables
          - glue:BatchCreatePartition
          - glue:CreatePartition
          - glue:DeletePartition
          - glue:BatchDeletePartition
          - glue:UpdatePartition
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          Effect: Allow
          Resource:
          - '*'
        - Action:
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListBucket
          - s3:PutObject
          Effect: Allow
          Resource:
            - '*'
          # - !Join ['', ['arn:aws:s3:::', !Ref ScriptBucket] ]
          # - !Join ['', ['arn:aws:s3:::', !Ref ScriptBucket, '/*'] ]
          # - !Join ['', ['arn:aws:s3:::', !Ref DataBucket] ]
          # - !Join ['', ['arn:aws:s3:::', !Ref DataBucket, '/*'] ]
      PolicyName: !Sub ${EnvironmentType}-redshift_sandClinic_policy
      Roles:
      - Ref: RedshiftRole



     
  VPCRSSubnetGroup:
      Type: AWS::Redshift::ClusterSubnetGroup
      Properties:
        Description: "Subnet group for Redshift VPC."
        SubnetIds:
          - !Ref VPCSubnetID1
          - !Ref VPCSubnetID2
          - !Ref VPCSubnetID3
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentType}-4ChealthRedshift-VPC

  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties:
      VpcSecurityGroupIds:
        - !Ref RedShiftSecurityGroup
      ClusterSubnetGroupName: !Ref VPCRSSubnetGroup
      ClusterType: "single-node"
      NodeType: "dc2.large"
      NumberOfNodes: 1
      IamRoles:
        - !GetAtt RedshiftIngestIAMRole.Arn
      MasterUsername: !Ref RedshiftUsername
      MasterUserPassword: !Ref RedshiftPassword
      DBName: "dev"
      Encrypted: true
      PubliclyAccessible: true
      ClusterIdentifier: ${EnvironmentType}-4ChealthRedshift-DWH


      



Outputs:
  RedshiftSG:
    Description: Redshift DWH security group
    Value: !Ref RedShiftSecurityGroup
  RedshiftSecret:
    Description: Redshift Secret
    Value: !Ref RedshiftSecret
  
  RedshiftClusterJDBCUrl:
    Value: !Sub "jdbc:redshift://${ProdRedshiftCluster.Endpoint.Address}:${ProdRedshiftCluster.Endpoint.Port}/dev"
  RedshiftIngestRoleArn:
    Value: !GetAtt RedshiftIngestIAMRole.Arn